name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: superuser
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
    DOCKERHUB_USERNAME: siddharth67
    
jobs:
    # unit-testing:
    #     name: Unit Testing
    #     runs-on: ${{ matrix.operating_system }}
    #     strategy:
    #         matrix:
    #             nodejs_version: [18, 19, 20]
    #             operating_system: [ubuntu-latest]
    #             # exclude:
    #             #     - nodejs_version: [18, 19, 20]
    #             #       operating_system: [macos-latest]
    #     steps:
    #     - name: Checkout Repository
    #       uses: actions/checkout@v4

    #     - name: Setup NodeJS Version - ${{ matrix.nodejs_version }} on ${{ matrix.operating_system }}
    #       uses: actions/setup-node@v3
    #       with:
    #         node-version: ${{ matrix.nodejs_version }}

    #     - name: Cache NPM dependencies
    #       uses: actions/cache@v3
    #       with:
    #         path: ~/.npm
    #         key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}     

    #     - name: Install Dependencies
    #       run: npm install
    
    #     - name: Unit Testing
    #       id: node-unit-testing-step
    #       run: npm test
          
    #     - name: Archive Test Result
    #       if: always() && (steps.node-unit-testing-step.outcome == 'failure' || steps.node-unit-testing-step.outcome == 'success')
    #       uses: actions/upload-artifact@v3
    #       with:
    #         name: Mocha-Test-Result
    #         path: test-results.xml

    # code-coverage:
    #     name: Code Coverage
    #     runs-on: ubuntu-latest
    #     steps:
    #     - name: Checkout Repository
    #       uses: actions/checkout@v4

    #     - name: Setup NodeJS Version - 18
    #       uses: actions/setup-node@v3
    #       with:
    #         node-version: 18

    #     - name: Cache NPM dependencies
    #       uses: actions/cache@v3
    #       with:
    #         path: ~/.npm
    #         key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}     
                
    #     - name: Install Dependencies
    #       run: npm install
    
    #     - name: Check Code Coverage
    #       continue-on-error: true
    #       run: npm run coverage
          
    #     - name: Archive Test Result
    #       uses: actions/upload-artifact@v3
    #       with:
    #         name: Code-Coverage-Result
    #         path: coverage
    #         retention-days: 5

    docker:
        name: Containerization
        runs-on: ubuntu-latest
       # needs: [code-coverage, unit-testing]
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Dockerhub Login
          uses: docker/login-action@v2.2.0
          with:
            username: ${{ env.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
        - name: Docker Build For Testing
          uses: docker/build-push-action@v4
          with:
            context: .
            load: true
            push: false
            tags: ${{ env.DOCKERHUB_USERNAME }}/solar-system-${{ github.ref_name }}:${{ github.sha }}
    
        - name: Docker Image Test
          run: |
            docker images
            docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{ env.DOCKERHUB_USERNAME }}/solar-system-${{ github.ref_name }}:${{ github.sha }}
            
            echo Testing using curl
            curl -s http://localhost:3000/live | grep live 
